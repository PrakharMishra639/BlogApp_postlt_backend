declare type Colors = 'red' | 'pink' | 'purple' | 'deep-purple' | 'indigo' | 'blue' | 'light-blue' | 'cyan' | 'teal' | 'green' | 'light-green' | 'lime' | 'yellow' | 'amber' | 'orange' | 'deep-orange' | 'brown' | 'blue-grey' | 'grey' | 'white' | 'black';
export declare const Test = "<>!-!_LOI_GENERATE_DESCRIPTIONS_!-!<>";
export declare const DateItem = "loi_internal_Date";
export declare const Url = "loi_internal_Url";
export declare const File = "loi_internal_File";
export declare const Image = "loi_internal_Image";
export declare const Enum = "loi_internal_Enum";
/**
 * Return a result
 * @param result expected result
 * @param user user object
 * @param state state
 */
export declare function Give(result: any, user?: any, state?: any): {
    ok(): any;
    description(description: any): any;
    for(permission: string | (string | string[])[]): any;
    or(item: any): any;
    and(item: any): any;
    as(model: string | Date): any;
    format(format: string | Date): any;
    min(): any;
    max(): any;
    example(example: string): any;
    colorEnum(dictionary: {
        [index: string]: Colors;
    }): any;
};
/**
 * generates a description of an output function'
 * @param fn output function to describe
 */
export declare function Describe(fn: Function): {};
export declare const give: typeof Give;
export declare const describe: typeof Describe;
export {};
